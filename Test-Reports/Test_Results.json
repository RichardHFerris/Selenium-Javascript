{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2023-06-07T06:58:58.057Z",
    "end": "2023-06-07T06:59:03.863Z",
    "duration": 5806,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b5256550-8dd0-4039-bf64-63c046a499e3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb04af70-496c-4b47-a100-3e5ea474f686",
          "title": "add todo tests",
          "fullFile": "/Users/richard/javascript-selenium/test/firstTest.js",
          "file": "/test/firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully add a todo to the application",
              "fullTitle": "add todo tests successfully add a todo to the application",
              "timedOut": null,
              "duration": 4702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add a to-do\nawait driver\n    .findElement(By.id(\"sampletodotext\"))\n    .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n    .findElement(By.xpath(\"//li[last()]\"))\n    .getText()\n    .then(function (value) {\n        return value\n    });\n//assert using assertion\n//assert.strictEqual(todoText, \"Learn Selenium\");\n//assert using Chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit()",
              "err": {},
              "uuid": "ce8352bc-58fa-4f83-b390-d6e84b92b8f0",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce8352bc-58fa-4f83-b390-d6e84b92b8f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4702,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "6ea58a37-a6a0-415d-ac5b-22fdd983f186",
          "title": "add another todo tests",
          "fullFile": "/Users/richard/javascript-selenium/test/secondtest.js",
          "file": "/test/secondtest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully add a another todo to the application",
              "fullTitle": "add another todo tests successfully add a another todo to the application",
              "timedOut": null,
              "duration": 4702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add a to-do\nawait driver\n    .findElement(By.id(\"sampletodotext\"))\n    .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n    .findElement(By.xpath(\"//li[last()]\"))\n    .getText()\n    .then(function (value) {\n        return value\n    });\n//assert using assertion\n//assert.strictEqual(todoText, \"Learn Selenium\");\n//assert using Chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit()",
              "err": {},
              "uuid": "f172e6c6-2bba-4ee4-88f3-2042fd503889",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": " add a another test for reporting",
              "fullTitle": "add another todo tests  add a another test for reporting",
              "timedOut": null,
              "duration": 957,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add a to-do\nawait driver\n    .findElement(By.id(\"sampletodotext\"))\n    .sendKeys(\"Learn zwahili\", Key.RETURN);\n//assert\nlet todoText = await driver\n    .findElement(By.xpath(\"//li[last()]\"))\n    .getText()\n    .then(function (value) {\n        return value\n    });\n//assert using assertion\n//assert.strictEqual(todoText, \"Learn Selenium\");\n//assert using Chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit()",
              "err": {
                "message": "AssertionError: expected 'Learn zwahili' to equal 'Learn Selenium'",
                "estack": "AssertionError: expected 'Learn zwahili' to equal 'Learn Selenium'\n    at Context.<anonymous> (test/secondtest.js:58:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Learn zwahili\n+ Learn Selenium\n"
              },
              "uuid": "f8f98b30-6ebf-4657-985a-82c7d9a2e17d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f172e6c6-2bba-4ee4-88f3-2042fd503889"
          ],
          "failures": [
            "f8f98b30-6ebf-4657-985a-82c7d9a2e17d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5659,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/richard/javascript-selenium/Test-Reports",
        "reportFilename": "Test_Results"
      },
      "version": "6.2.0"
    }
  }
}